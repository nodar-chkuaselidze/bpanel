user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
worker_rlimit_nofile 8192;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

http {

    include /etc/nginx/mime.types;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
      '"$request" $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen localhost:80;

        server_name localhost;

        ssl_certificate /etc/nginx/tls.crt;
        ssl_certificate_key /etc/nginx/tls.key;

        return 301 https://localhost.com$request_uri;
    }
    
    server {
        listen 4443 ssl;

        server_name _;

        ssl_certificate /etc/nginx/tls.crt;
        ssl_certificate_key /etc/nginx/tls.key;

        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        access_log /dev/stdout;

        location / {
            # use builtin docker dns resolution
            resolver 127.0.0.11 valid=300s ipv6=off;
            resolver_timeout 10s;

            # TODO (mark): generate config
            # where the backend isn't hardcoded
            set $backend "http://server:8000";

            proxy_pass $backend$request_uri;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
         }
    }
}


